data=dat,
focal_regression = ~ 1,
target_regression = ~ 1,
dyad_regression = ~ Grooming.received,
mode="mcmc",
stan_mcmc_parameters = list(
chains = nchains,
iter_warmup = chain_length,
iter_sampling = warmup))
# summarize results
res4 <-  summarize_strand_results(sfit4)
# save diagnostics
diagnostics4 <- get_diagnostics(sfit4, "allogrooming received")
# save results
strand4 <-
res4$summary %>%
as_tibble() %>%
mutate(Model = "allogrooming received")
# plot results
(plot4a <- strand_caterpillar_plot(res4, normalized=FALSE,  only_slopes=F))
(plot4b <- strand_caterpillar_plot(res4,
submodels = "Dyadic effects",
normalized=T,
only_slopes=T))
(plot4c <- plot_posteriors(res4, "allogrooming received", "allogrooming received"))
# model effect of feeding received -----
sfit5 <-
fit_social_relations_model(
data=dat,
focal_regression = ~ 1,
target_regression = ~ 1,
dyad_regression = ~ Feeding.received,
mode="mcmc",
stan_mcmc_parameters = list(
chains = nchains,
iter_warmup = chain_length,
iter_sampling = warmup))
# summarize results
res5 <-  summarize_strand_results(sfit5)
# get diagnostics
diagnostics5 <- get_diagnostics(sfit5, "allofeeding received")
# save results
strand5 <-
res5$summary %>%
as_tibble() %>%
mutate(Model = "allofeeding received")
# plot results
(plot5a <- strand_caterpillar_plot(res5, normalized=FALSE,  only_slopes=F))
(plot5b <- strand_caterpillar_plot(res5,
submodels = "Dyadic effects",
normalized=T,
only_slopes=T))
(plot5c <- plot_posteriors(res5, "allofeeding received", "allofeeding received"))
# plot all
library(patchwork)
plot1c+ plot2c+ plot3c+ plot4c+plot5c
### save all STRAND results
rbind(strand1, strand2, strand3, strand4, strand5) %>%
relocate(Model) %>%
write.csv(file= "STRAND_model_results.csv", row.names= FALSE)
### save all STRAND diagnostics
rbind(diagnostics1, diagnostics2, diagnostics3, diagnostics4, diagnostics5) %>%
write.csv(file= "STRAND_model_diagnostics.csv", row.names= FALSE)
### save workspace
save.image(file= paste("model_fit_workspace_", timestamp, ".Rdata", sep=""))
### save workspace
timestamp <- substr(gsub(x=gsub(":","",Sys.time()), pattern=" ", replacement="_"), start=1, stop=15)
save.image(file= paste("model_fit_workspace_", timestamp, ".Rdata", sep=""))
### save all STRAND results
rbind(strand1, strand2, strand3, strand4, strand5) %>%
relocate(Model) %>%
write.csv(file= "results/STRAND_model_results.csv", row.names= FALSE)
### save all STRAND diagnostics
rbind(diagnostics1, diagnostics2, diagnostics3, diagnostics4, diagnostics5) %>%
write.csv(file= "results/STRAND_model_diagnostics.csv", row.names= FALSE)
results <- res1
# get samples for focal and target effects SD
t1 <-
results$samples$srm_model_samples$focal_target_sd %>%
as_tibble() %>%
rename(focal_effects_sd= V1, target_effects_sd= V2) %>%
pivot_longer(focal_effects_sd: target_effects_sd,
names_to = "label",
values_to = "value")
View(t1)
# get samples for dyadic effect SD
t2 <-
results$samples$srm_model_samples$dyadic_sd %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "dyadic_effect_sd")
View(t2)
# get samples for dyadic effect coeff
t3 <-
results$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "dyadic_effect_coeff")
# get samples for focal-target effects rho (generalized reciprocity)
t4 <-
results$samples$srm_model_samples$focal_target_L %>%
as_tibble() %>%
rename(value= `2.1`) %>%
select(value) %>%
mutate(label= "focal-target_effects_rho")
# get samples for dyadic effects rho (dyadic reciprocity)
t5 <-
results$samples$srm_model_samples$dyadic_L %>%
as_tibble() %>%
rename(value= `2.1`) %>%
select(value) %>%
mutate(label= "dyadic_effects_rho")
rm(results)
# plot dyadic effect coeff for allogrooming, allofeeding, kinship ----
# get samples for dyadic effect coeff
tg <-
res1$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "dyadic_effect_coeff")
tf <-
res2$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "dyadic_effect_coeff")
tk <-
res2$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "dyadic_effect_coeff")
tk <-
res3$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "dyadic_effect_coeff")
View(tk)
(dyad_coeff_plot <-
rbind(tf,tg,tk) %>%
mutate(label= fct_rev(label)) %>%
ggplot(aes(y = label, x = value, fill=label)) +
stat_halfeye(.width = c(0.95), linewidth= 5, size=5)+
geom_vline(xintercept = 0)+
ylab("")+
xlab("model coefficient")+
ggtitle(title)+
theme_bw()+
theme(legend.position= 'none',
axis.text.y = element_text(size = 10, vjust = 0.5, hjust = 0.5)))
rbind(tf,tg,tk)
# plot dyadic effect coeff for allogrooming, allofeeding, kinship ----
# get samples for dyadic effect coeff
tf <-
res2$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "allofeeding")
tg <-
res1$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "allogrooming")
tk <-
res3$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "kinship")
(dyad_coeff_plot <-
rbind(tf,tg,tk) %>%
mutate(label= fct_rev(label)) %>%
ggplot(aes(y = label, x = value, fill=label)) +
stat_halfeye(.width = c(0.95), linewidth= 5, size=5)+
geom_vline(xintercept = 0)+
ylab("")+
xlab("model coefficient")+
ggtitle(title)+
theme_bw()+
theme(legend.position= 'none',
axis.text.y = element_text(size = 10, vjust = 0.5, hjust = 0.5)))
rbind(tf,tg,tk)
(dyad_coeff_plot <-
rbind(tf,tg,tk) %>%
mutate(label= fct_rev(label)) %>%
ggplot(aes(y = label, x = value, fill=label)) +
stat_halfeye(.width = c(0.95), linewidth= 5, size=5)+
geom_vline(xintercept = 0)+
ylab("")+
xlab("model coefficient")+
theme_bw()+
theme(legend.position= 'none',
axis.text.y = element_text(size = 10, vjust = 0.5, hjust = 0.5)))
tf <-
res2$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "Allofeeding")
tg <-
res1$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "Allogrooming")
tk <-
res3$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "Kinship")
(dyad_coeff_plot <-
rbind(tf,tg,tk) %>%
mutate(label= fct_rev(label)) %>%
ggplot(aes(y = label, x = value, fill=label)) +
stat_halfeye(.width = c(0.95), linewidth= 5, size=5)+
geom_vline(xintercept = 0)+
ylab("")+
xlab("model coefficient")+
theme_bw()+
theme(legend.position= 'none',
axis.text.y = element_text(size = 10, vjust = 0.5, hjust = 0.5)))
# save plot
ggsave(
"results/summary.pdf",
plot = dyad_coeff_plot,
scale = 1,
width = 5.5,
height = 6.5,
units = c("in", "cm", "mm", "px"),
dpi = 300)
(dyad_coeff_plot <-
rbind(tf,tg,tk) %>%
mutate(label= fct_rev(label)) %>%
ggplot(aes(y = label, x = value, fill=label)) +
stat_halfeye(.width = c(0.95), linewidth= 5, size=5)+
geom_vline(xintercept = 0)+
ylab("")+
xlab("model coefficient")+
theme_bw()+
theme(legend.position= 'none',
axis.text.y = element_text(size = 12, vjust = 0.5, hjust = 0.5)))
# save plot
ggsave(
"results/summary.pdf",
plot = dyad_coeff_plot,
scale = 1,
width = 5.5,
height = 6.5,
units = c("in", "cm", "mm", "px"),
dpi = 300)
(dyad_coeff_plot <-
rbind(tf,tg,tk) %>%
mutate(label= fct_rev(label)) %>%
ggplot(aes(y = label, x = value, fill=label)) +
stat_halfeye(.width = c(0.95), linewidth= 5, size=5)+
geom_vline(xintercept = 0)+
ylab("")+
xlab("model coefficient")+
theme_bw()+
theme(legend.position= 'none',
axis.text.y = element_text(size = 12, vjust = 0.5, hjust = 0.5),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12)
))
# save plot
ggsave(
"results/summary.pdf",
plot = dyad_coeff_plot,
scale = 1,
width = 5.5,
height = 6.5,
units = c("in", "cm", "mm", "px"),
dpi = 300)
# plot models
(models.plot <-
rbind(t1, t2, t3) %>%
mutate(model= fct_rev(model)) %>%
ggplot(aes(y = model, x = coeff, fill=model)) +
stat_halfeye(.width = c(0.95), linewidth= 5, size=5)+
geom_vline(xintercept = 0)+
ylab("")+
xlab("estimated effect on calling rate (coefficient)")+
theme_bw()+
theme(legend.position= 'none',
axis.text.y = element_text(size = 20, vjust = 0.5, hjust = 0.5),
axis.text.x = element_text(size = 20),
axis.title.x = element_text(size = 18)
))
# plot models
(models.plot <-
rbind(t1, t2, t3) %>%
mutate(model= fct_rev(model)) %>%
ggplot(aes(y = model, x = coeff, fill=model)) +
stat_halfeye(.width = c(0.95), linewidth= 5, size=5)+
geom_vline(xintercept = 0)+
ylab("")+
xlab("estimated effect on calling rate (coefficient)")+
theme_bw()+
theme(legend.position= 'none',
axis.text.y = element_text(size = 20, vjust = 0.5, hjust = 0.5),
axis.text.x = element_text(size = 20),
axis.title.x = element_text(size = 18)
))
# get posteriors
t1 <-
fit1 %>%
spread_draws(b_scalegroom) %>%
mutate(model = "Allogrooming") %>%
pivot_longer(b_scalegroom, names_to = 'term', values_to= 'coeff')
t2 <-
fit2 %>%
spread_draws(b_scalefeed) %>%
mutate(model = "Allofeeding") %>%
pivot_longer(b_scalefeed, names_to = 'term', values_to= 'coeff')
t3 <-
fit3 %>%
spread_draws(b_scalekinship) %>%
mutate(model = "Kinship") %>%
pivot_longer(b_scalekinship, names_to = 'term', values_to= 'coeff')
# plot models
(models.plot <-
rbind(t1, t2, t3) %>%
mutate(model= fct_rev(model)) %>%
ggplot(aes(y = model, x = coeff, fill=model)) +
stat_halfeye(.width = c(0.95), linewidth= 5, size=5)+
geom_vline(xintercept = 0)+
ylab("")+
xlab("estimated effect on calling rate (coefficient)")+
theme_bw()+
theme(legend.position= 'none',
axis.text.y = element_text(size = 20, vjust = 0.5, hjust = 0.5),
axis.text.x = element_text(size = 20),
axis.title.x = element_text(size = 18)
))
# save plot
ggsave(
"results/brms_models_plot_talk.pdf",
plot = models.plot,
scale = 1,
width = 5.5,
height = 6.5,
units = c("in", "cm", "mm", "px"),
dpi = 300)
# plot dyadic effect coeff for allogrooming, allofeeding, kinship ----
# get samples for dyadic effect coeff
tf <-
res2$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "Allofeeding")
tg <-
res1$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "Allogrooming")
tk <-
res3$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "Kinship")
(dyad_coeff_plot <-
rbind(tf,tg,tk) %>%
mutate(label= fct_rev(label)) %>%
ggplot(aes(y = label, x = value, fill=label)) +
stat_halfeye(.width = c(0.95), linewidth= 5, size=5)+
geom_vline(xintercept = 0)+
ylab("")+
xlab("model coefficient")+
theme_bw()+
theme(legend.position= 'none',
axis.text.y = element_text(size = 12, vjust = 0.5, hjust = 0.5),
axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12)
))
(dyad_coeff_plot <-
rbind(tf,tg,tk) %>%
mutate(label= fct_rev(label)) %>%
ggplot(aes(y = label, x = value, fill=label)) +
stat_halfeye(.width = c(0.95), linewidth= 5, size=5)+
geom_vline(xintercept = 0)+
ylab("")+
xlab("model coefficient")+
theme_bw()+
theme(legend.position= 'none',
axis.text.y = element_text(size = 20, vjust = 0.5, hjust = 0.5),
axis.text.x = element_text(size = 20),
axis.title.x = element_text(size = 18)
))
(plot2c <- plot_posteriors(res2, "allofeeding given", "allofeeding given"))
(plot2c <- plot_posteriors(res2, "allofeeding given", "allofeeding given"))
### function to plot posteriors from STRAND
# note: block parameters 1 = intercept
plot_posteriors <- function(results= results,
title= "title here",
effect= "effect here"){
# get samples for focal and target effects SD
t1 <-
results$samples$srm_model_samples$focal_target_sd %>%
as_tibble() %>%
rename(focal_effects_sd= V1, target_effects_sd= V2) %>%
pivot_longer(focal_effects_sd: target_effects_sd,
names_to = "label",
values_to = "value")
# get samples for dyadic effect SD
t2 <-
results$samples$srm_model_samples$dyadic_sd %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "dyadic_effect_sd")
# get samples for dyadic effect coeff
t3 <-
results$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "dyadic_effect_coeff")
# get samples for focal-target effects rho (generalized reciprocity)
t4 <-
results$samples$srm_model_samples$focal_target_L %>%
as_tibble() %>%
rename(value= `2.1`) %>%
select(value) %>%
mutate(label= "focal-target_effects_rho")
# get samples for dyadic effects rho (dyadic reciprocity)
t5 <-
results$samples$srm_model_samples$dyadic_L %>%
as_tibble() %>%
rename(value= `2.1`) %>%
select(value) %>%
mutate(label= "dyadic_effects_rho")
# combine results
(tplot <-
rbind(t1,t2,t3,t4,t5) %>%
mutate(label= case_when(
label== 'focal_effects_sd' ~ "2. caller identity (SD)",
label=='target_effects_sd' ~ "3. receiver identity (SD)",
label=='dyadic_effect_sd' ~ "4. pair identity (SD)",
label=='dyadic_effect_coeff' ~ paste0("1. ",effect),
label=='dyadic_effects_rho' ~ "5. within-pair correlation",
label=='focal-target_effects_rho' ~ "6. generalized correlation")) %>%
mutate(label= fct_rev(label)) %>%
ggplot(aes(y = label, x = value, fill=label)) +
stat_halfeye(.width = c(0.95), linewidth= 5, size=5)+
geom_vline(xintercept = 0)+
ylab("")+
xlab("model coefficient")+
ggtitle(title)+
theme_bw()+
theme(legend.position= 'none',
axis.text.y = element_text(size = 20, vjust = 0.5, hjust = 0.5),
axis.text.x = element_text(size = 20),
axis.title.x = element_text(size = 18)
))
return(tplot)
}
(plot2c <- plot_posteriors(res2, "allofeeding given", "allofeeding given"))
### function to plot posteriors from STRAND
# note: block parameters 1 = intercept
plot_posteriors <- function(results= results,
title= "title here",
effect= "effect here"){
# get samples for focal and target effects SD
t1 <-
results$samples$srm_model_samples$focal_target_sd %>%
as_tibble() %>%
rename(focal_effects_sd= V1, target_effects_sd= V2) %>%
pivot_longer(focal_effects_sd: target_effects_sd,
names_to = "label",
values_to = "value")
# get samples for dyadic effect SD
t2 <-
results$samples$srm_model_samples$dyadic_sd %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "dyadic_effect_sd")
# get samples for dyadic effect coeff
t3 <-
results$samples$srm_model_samples$dyadic_coeffs %>%
as_tibble() %>%
rename(value= V1) %>%
mutate(label= "dyadic_effect_coeff")
# get samples for focal-target effects rho (generalized reciprocity)
t4 <-
results$samples$srm_model_samples$focal_target_L %>%
as_tibble() %>%
rename(value= `2.1`) %>%
select(value) %>%
mutate(label= "focal-target_effects_rho")
# get samples for dyadic effects rho (dyadic reciprocity)
t5 <-
results$samples$srm_model_samples$dyadic_L %>%
as_tibble() %>%
rename(value= `2.1`) %>%
select(value) %>%
mutate(label= "dyadic_effects_rho")
# combine results
(tplot <-
rbind(t1,t2,t3,t4,t5) %>%
mutate(label= case_when(
label== 'focal_effects_sd' ~ "2. caller identity (SD)",
label=='target_effects_sd' ~ "3. receiver identity (SD)",
label=='dyadic_effect_sd' ~ "4. pair identity (SD)",
label=='dyadic_effect_coeff' ~ paste0("1. ",effect),
label=='dyadic_effects_rho' ~ "5. within-pair correlation",
label=='focal-target_effects_rho' ~ "6. generalized correlation")) %>%
mutate(label= fct_rev(label)) %>%
ggplot(aes(y = label, x = value, fill=label)) +
stat_halfeye(.width = c(0.95), linewidth= 5, size=5)+
geom_vline(xintercept = 0)+
ylab("")+
xlab("model coefficient")+
ggtitle(title)+
theme_bw()+
theme(legend.position= 'none',
axis.text.y = element_text(size = 10, vjust = 0.5, hjust = 0.5)))
return(tplot)
}
(plot2c <- plot_posteriors(res2, "allofeeding given", "allofeeding given"))
